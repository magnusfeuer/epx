Pixel formats
=============

Epx pixel formats describe how the pixel channels are stored
in memory, not how they are stored in a register when read
from memory. 
For example the pixel format argb (identical with a8r8g8b8 and
a8r8g8b8/big) describe the size and channel order of the pixels
in memory.

    > P = pixmap_create(1, 1, argb).
    > epx:pixmap_put_pixel(P,0,0,16#01020304).
    > epx:pixmap_put_pixel(P,0,0,{A,R,G,B}).
    > <<A,R,G,B>> = epx:pixmap_get_pixels(P, 0, 0, 1, 1).

The 16 bit formats are a bit more tricky, since they are normally
given in terms of 16-bit words.

    > P = pixmap_create(1, 1, r5g6b5).
    > epx:pixmap_put_pixel(P,0,0,{A,R,G,B}).
    > <<R1:5,G1:6,B1:5>> = epx:pixmap_get_pixels(P, 0, 0, 1, 1).

Note that R,G,B are in [0-255] range so that R1,G1,B1 are
down scaled version, say R = 8 => R1 = 1.

A little endian version of the above 16-bit format may be
given as:

    > P = pixmap_create(1, 1, r5g6b5/little).
    > epx:pixmap_put_pixel(P1,0,0,{A,R,G,B}).
    > <<A0,A1>> = epx:pixmap_get_pixels(P, 0, 0, 1, 1)
    > <<R1:5,G1:6,B1:5>> = <<A1,A0>>

 (There is a lack of a grouped little endian modifier in Erlang)


Pixel composition operations

Input pixels alpha and color components

Src        = (Aa, A=(Ar,Ag,Ab))
Dst        = (Ba, B=(Br,Bg,Bb))

Color      = (Ca, C=(Cr,Cg,Cb))
Fade	   = F

The result can be tought of as call the function

    Dst = <Name>(Color,Fade,Src,Dst)

Alpha (Xa) is assumed to be in range [0,1] where 0 is fully transparent
and 1 is fully opaque.

Name  	 Color				Alpha		Comment

-- Potter Duff operators

CLEAR	 0				0		- Transparent

SRC	 A*Aa				Aa		-

DST	 B*Bb				Bb

SRC-OVER Aa*A+(1-Aa)*B*Ba		Aa+Ba-Aa*Ba

DST-OVER Ba*B+(1-Ba)*A*Aa		Aa+Ba-Aa*Ba

SRC-IN	 A*Aa*Ba			Aa*Ba

DST-IN	 B*Aa*Ba			Aa*Ba

SRC-OUT	 A*Aa*(1-Ba)			Aa*(1-Ba)

DST-OUT	 B*Ba*(1-Aa)			Ba*(1-Aa)

SRC-ATOP Aa*A*Ba+(1-Aa)*B*Ba		Ba

DST-ATOP Ba*B*Aa+(1-Ba)*A*Aa		Aa

XOR	 A*Aa*(1-Ba)+B*Ba*(1-Aa)	Aa+Ba-2*Aa*Ba

-- Other operators

COPY	 A				Aa		- plain copy

ADD	 A+B				Aa+Ba		- Saturate

ALPHAc	 Ca*A+(1-Ca)*B			Ca*Aa+(1-Ca)*Ba	- Constant alpha

BLEND    Aa*A+(1-Aa)*B			Aa*Aa+(1-Aa)*Ba - Blend using src alpha

FADEa    Fa=F*Aa,F*A+(1-F)*B		Aa*F+(1-F)*Ba   - Fade using F

SHADOW	 G=lum(A), (1-G)*B		